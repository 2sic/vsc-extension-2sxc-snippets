{"Path":{"prefix":"Path","body":"[App:Path]","description":"path for integrating scripts,  images etc. For example  use as @App.Path/scripts/knockout.js"},"PhysPath":{"prefix":"PhysPath","body":"@App.PhysicalPath","description":"physical path in c:\\"},"AppGuid":{"prefix":"AppGuid","body":"@App.AppGuid","description":"internal GUID - should stay the same across all systems for this specific App"},"AppId":{"prefix":"AppId","body":"[App:AppId]","description":"Id in the current data base. Is a different number in every App-Installation"},"AppName":{"prefix":"AppName","body":"@App.Name","description":"internal name"},"AppFolder":{"prefix":"AppFolder","body":"@App.Folder","description":"often used to create paths to scripts or join some values. if you only need to reference a script,  please use App.Path"},"Toolbar-for-an-item":{"prefix":"Toolbar-for-an-item","body":"@Edit.Toolbar(${1:Content})","description":"Show an inline-toolbar. If you want it hovering, make sure you have an HTML-element around it with the class sc-element."},"Toolbar-float-for-an-item":{"prefix":"Toolbar-float-for-an-item","body":"<div class=\"sc-element\">\r\n    @Edit.Toolbar(${1:Content})\r\n</div>","description":"Show an inline toolbar, floating. Note that this is just an example, the div with the class sc-element can be further away, it doesn't have to be the direct container. "},"Toolbar-float-left":{"prefix":"Toolbar-float-left","body":"<div class=\"sc-element\">\r\n    @Edit.Toolbar(${1:Content}, settings: new { hover = \"left\" })\r\n</div>","description":"Toolbar floating left"},"Toolbar-hover-right-all-the-time":{"prefix":"Toolbar-hover-right-all-the-time","body":"<div class=\"sc-element\">\r\n    @Edit.Toolbar(${1:Content}, settings: new { show = \"always\" })\r\n</div>","description":"Toolbar floating right, always (not waiting for mouse-over)"},"Toolbar-inline-(force-no-hover)":{"prefix":"Toolbar-inline-(force-no-hover)","body":"<div class=\"sc-element\">\r\n    @Edit.Toolbar(${1:Content}, settings: new { hover = \"none\" })\r\n</div>","description":"Toolbar not floating, even if within an sc-element tag"},"Toolbar-w/custom-CSS-classes":{"prefix":"Toolbar-w/custom-CSS-classes","body":"<div class=\"sc-element\">\r\n    @Edit.Toolbar(${1:Content}, settings: new { classes = \"${2:myCustomCssClass,anotherClass}\" })\r\n</div>","description":"Add custom css-classes to the toolbar"},"Toolbar-for-item-with-edit-/-replace-only":{"prefix":"Toolbar-for-item-with-edit-/-replace-only","body":"@Edit.Toolbar(${1:Content}, actions: \"edit,replace\")","description":"Toolbar with edit and replace buttons only"},"Toolbar-to-create-new-only":{"prefix":"Toolbar-to-create-new-only","body":"@Edit.Toolbar(actions: \"new\", contentType: \"${10:BlogPost}\")","description":"Toolbar with edit and replace buttons only"},"Toolbar-to-create-new-and-prefill":{"prefix":"Toolbar-to-create-new-and-prefill","body":"@Edit.Toolbar(actions: \"new\", contentType: \"${10:BlogPost}\", prefill: new { Title = \"Hello\", Color = \"red\" } )","description":"Toolbar with new and prefill example"},"List-Toolbar":{"prefix":"List-Toolbar","body":"[List:Toolbar]"},"List-ToolbarFloat":{"prefix":"List-ToolbarFloat","body":"<div class=\"sc-element\">[List:Toolbar]</div>"},"foreach-loop":{"prefix":"foreach-loop","body":"@foreach(var ${1:cont} in AsDynamic(Data[\"${2:Default}\"])){\r\n    <div class=\"sc-element\">\r\n        @${1}.EntityTitle\r\n        @Edit.Toolbar(${1})\r\n    </div>\r\n}","description":"simple loop to show all items in the default list"},"AllModules":{"prefix":"AllModules","body":"@Dnn.Module.AllModules"},"AllTabs":{"prefix":"AllTabs","body":"@Dnn.Module.AllTabs"},"Border":{"prefix":"Border","body":"@Dnn.Module.Border"},"Cacheability":{"prefix":"Cacheability","body":"@Dnn.Module.Cacheability"},"CacheMethod":{"prefix":"CacheMethod","body":"@Dnn.Module.CacheMethod"},"CacheTime":{"prefix":"CacheTime","body":"@Dnn.Module.CacheTime"},"ContainerPath":{"prefix":"ContainerPath","body":"@Dnn.Tab.ContainerPath"},"ContainerSrc":{"prefix":"ContainerSrc","body":"@Dnn.Tab.ContainerSrc"},"DefaultCacheTime":{"prefix":"DefaultCacheTime","body":"@Dnn.Module.DefaultCacheTime"},"DesktopModule":{"prefix":"DesktopModule","body":"@Dnn.Module.DesktopModule"},"DesktopModuleId":{"prefix":"DesktopModuleId","body":"@Dnn.Module.DesktopModuleId"},"DisplayTitle":{"prefix":"DisplayTitle","body":"@Dnn.Module.DisplayTitle"},"EndDate":{"prefix":"EndDate","body":"[Tab:EndDate]","description":"Page Display Until Date"},"Footer":{"prefix":"Footer","body":"[Module:Footer]","description":"Module Footer Text"},"Header":{"prefix":"Header","body":"[Module:Header]","description":"Module Header Text"},"ModuleControl":{"prefix":"ModuleControl","body":"@Dnn.Module.ModuleControl"},"ModuleControlId":{"prefix":"ModuleControlId","body":"@Dnn.Module.ModuleControlId"},"ModuleDefID":{"prefix":"ModuleDefID","body":"@Dnn.Module.ModuleDefID"},"ModuleDefinition":{"prefix":"ModuleDefinition","body":"@Dnn.Module.ModuleDefinition"},"ModuleID":{"prefix":"ModuleID","body":"@Dnn.Module.ModuleID"},"ModuleName":{"prefix":"ModuleName","body":"@Dnn.Module.ModuleName"},"ModuleOrder":{"prefix":"ModuleOrder","body":"@Dnn.Module.ModuleOrder"},"ModulePermissions":{"prefix":"ModulePermissions","body":"@Dnn.Module.ModulePermissions"},"ModuleSettings":{"prefix":"ModuleSettings","body":"@Dnn.Module.ModuleSettings"},"ModuleTitle":{"prefix":"ModuleTitle","body":"@Dnn.Module.ModuleTitle"},"PaneModuleCount":{"prefix":"PaneModuleCount","body":"@Dnn.Module.PaneModuleCount"},"PaneModuleIndex":{"prefix":"PaneModuleIndex","body":"@Dnn.Module.PaneModuleIndex"},"PaneName":{"prefix":"PaneName","body":"[Module:PaneName]","description":"Module Name of Pane (where the module resides)"},"ParentTab":{"prefix":"ParentTab","body":"@Dnn.Module.ParentTab"},"PortalID":{"prefix":"PortalID","body":"@Dnn.Tab.PortalID"},"StartDate":{"prefix":"StartDate","body":"[Tab:StartDate]","description":"Page Display from Date"},"TabID":{"prefix":"TabID","body":"@Dnn.Tab.TabID"},"TabModuleID":{"prefix":"TabModuleID","body":"@Dnn.Module.TabModuleID"},"TabModuleSettings":{"prefix":"TabModuleSettings","body":"@Dnn.Module.TabModuleSettings"},"UniqueId":{"prefix":"UniqueId","body":"@Dnn.Tab.UniqueId"},"Visibility":{"prefix":"Visibility","body":"@Dnn.Module.Visibility"},"ChildModules":{"prefix":"ChildModules","body":"@Dnn.Tab.ChildModules"},"CultureCode":{"prefix":"CultureCode","body":"@Dnn.Portal.CultureCode"},"DefaultLanguageGuid":{"prefix":"DefaultLanguageGuid","body":"@Dnn.Tab.DefaultLanguageGuid"},"DefaultLanguageTab":{"prefix":"DefaultLanguageTab","body":"@Dnn.Tab.DefaultLanguageTab"},"Description":{"prefix":"Description","body":"[Portal:Description]","description":"Portal Description"},"FullUrl":{"prefix":"FullUrl","body":"[Tab:FullUrl]","description":"Page Full URL"},"HasChildren":{"prefix":"HasChildren","body":"@Dnn.Tab.HasChildren"},"IsDefaultLanguage":{"prefix":"IsDefaultLanguage","body":"@Dnn.Tab.IsDefaultLanguage"},"IsDeleted":{"prefix":"IsDeleted","body":"@Dnn.User.IsDeleted"},"IsNeutralCulture":{"prefix":"IsNeutralCulture","body":"@Dnn.Tab.IsNeutralCulture"},"IsSecure":{"prefix":"IsSecure","body":"@Dnn.Tab.IsSecure"},"IsTranslated":{"prefix":"IsTranslated","body":"@Dnn.Tab.IsTranslated"},"IsVisible":{"prefix":"IsVisible","body":"@Dnn.Tab.IsVisible"},"KeyWords":{"prefix":"KeyWords","body":"[Tab:KeyWords]","description":"Page Keywords for Search Engine"},"Level":{"prefix":"Level","body":"@Dnn.Tab.Level"},"LocalizedTabName":{"prefix":"LocalizedTabName","body":"@Dnn.Tab.LocalizedTabName"},"LocalizedTabs":{"prefix":"LocalizedTabs","body":"@Dnn.Tab.LocalizedTabs"},"Modules":{"prefix":"Modules","body":"@Dnn.Tab.Modules"},"PageHeadtext":{"prefix":"PageHeadtext","body":"[Tab:PageHeadText]","description":"Page Header Text"},"Panes":{"prefix":"Panes","body":"@Dnn.Tab.Panes"},"ParentId":{"prefix":"ParentId","body":"@Dnn.Tab.ParentId"},"PermanentRedirect":{"prefix":"PermanentRedirect","body":"@Dnn.Tab.PermanentRedirect"},"RefreshInterval":{"prefix":"RefreshInterval","body":"@Dnn.Tab.RefreshInterval"},"SiteMapPriority":{"prefix":"SiteMapPriority","body":"@Dnn.Tab.SiteMapPriority"},"SkinDoctype":{"prefix":"SkinDoctype","body":"@Dnn.Tab.SkinDoctype"},"SkinPath":{"prefix":"SkinPath","body":"@Dnn.Tab.SkinPath"},"SkinSrc":{"prefix":"SkinSrc","body":"@Dnn.Tab.SkinSrc"},"TabName":{"prefix":"TabName","body":"[Tab:TabName]","description":"Page Name"},"TabOrder":{"prefix":"TabOrder","body":"@Dnn.Tab.TabOrder"},"TabPath":{"prefix":"TabPath","body":"[Tab:TabPath]","description":"Page Relative Path"},"TabPermissions":{"prefix":"TabPermissions","body":"@Dnn.Tab.TabPermissions"},"TabSettings":{"prefix":"TabSettings","body":"@Dnn.Tab.TabSettings"},"TabType":{"prefix":"TabType","body":"@Dnn.Tab.TabType"},"Title":{"prefix":"Title","body":"[Tab:Title]","description":"Page Title (Window Title)"},"Url":{"prefix":"Url","body":"[Tab:URL]","description":"Page URL"},"ActiveTab":{"prefix":"ActiveTab","body":"@Dnn.Portal.ActiveTab"},"AdministratorId":{"prefix":"AdministratorId","body":"@Dnn.Portal.AdministratorId"},"AdministratorRoleId":{"prefix":"AdministratorRoleId","body":"@Dnn.Portal.AdministratorRoleId"},"AdministratoRoleName":{"prefix":"AdministratoRoleName","body":"@Dnn.Portal.AdministratoRoleName"},"AdminTabId":{"prefix":"AdminTabId","body":"@Dnn.Portal.AdminTabId"},"Currency":{"prefix":"Currency","body":"[Portal:Currency]","description":"Currency String"},"Current":{"prefix":"Current","body":"@Dnn.Portal.Current","description":"static method returning the current portal portal-settings"},"Default":{"prefix":"Default","body":"@Dnn.Portal.Default","description":"(AdminContainer, AdminSkin, ControlPanelMode, etc.)"},"DefaultLanguage":{"prefix":"DefaultLanguage","body":"@Dnn.Portal.DefaultLanguage"},"DefaultModuleId":{"prefix":"DefaultModuleId","body":"@Dnn.Portal.DefaultModuleId"},"DefaultPortalContainer":{"prefix":"DefaultPortalContainer","body":"@Dnn.Portal.DefaultPortalContainer"},"DefaultTabId":{"prefix":"DefaultTabId","body":"@Dnn.Portal.DefaultTabId"},"Email":{"prefix":"Email","body":"[User:Email]","description":"User’s Email Address"},"EnableBrowserLanguage":{"prefix":"EnableBrowserLanguage","body":"@Dnn.Portal.EnableBrowserLanguage"},"EnableUrlLanguage":{"prefix":"EnableUrlLanguage","body":"@Dnn.Portal.EnableUrlLanguage"},"ExpiryDate":{"prefix":"ExpiryDate","body":"@Dnn.Portal.ExpiryDate"},"FooterText":{"prefix":"FooterText","body":"[Portal:FooterText]","description":"Portal Copyright Text"},"Guid":{"prefix":"Guid","body":"[App:AppGuid]","description":"internal GUID - should stay the same across all systems for this specific App"},"HomeDirectory":{"prefix":"HomeDirectory","body":"[Portal:HomeDirectory]","description":"Portal Path (relative) of Home Directory"},"HomeDirectoryMapPath":{"prefix":"HomeDirectoryMapPath","body":"@Dnn.Portal.HomeDirectoryMapPath"},"HomeTabId":{"prefix":"HomeTabId","body":"@Dnn.Portal.HomeTabId","description":"the root page"},"LoginTabId":{"prefix":"LoginTabId","body":"@Dnn.Portal.LoginTabId","description":"where the normal login usually goes to"},"LogoFile":{"prefix":"LogoFile","body":"[Portal:LogoFile]","description":"Portal Path to Logo File"},"Pages":{"prefix":"Pages","body":"@Dnn.Portal.Pages"},"PortalAlias":{"prefix":"PortalAlias","body":"[Portal:PortalAlias]","description":"Portal URL"},"PortalId":{"prefix":"PortalId","body":"@Dnn.User.PortalId"},"PortalName":{"prefix":"PortalName","body":"[Portal:PortalName]","description":"Portal Name"},"PortalSkin":{"prefix":"PortalSkin","body":"@Dnn.Portal.PortalSkin"},"RegisteredRoleId":{"prefix":"RegisteredRoleId","body":"@Dnn.Portal.RegisteredRoleId"},"RegisteredRoleName":{"prefix":"RegisteredRoleName","body":"@Dnn.Portal.RegisteredRoleName"},"RegisterTabId":{"prefix":"RegisterTabId","body":"@Dnn.Portal.RegisterTabId"},"Search":{"prefix":"Search","body":"@Dnn.Portal.Search.something","description":"various values like IncludeCommon, IncludeTagInfoFilter etc."},"SearchTabId":{"prefix":"SearchTabId","body":"@Dnn.Portal.SearchTabId"},"SiteLogHistory":{"prefix":"SiteLogHistory","body":"@Dnn.Portal.SiteLogHistory"},"SplashTabId":{"prefix":"SplashTabId","body":"@Dnn.Portal.SplashTabId"},"SSLEnabled":{"prefix":"SSLEnabled","body":"@Dnn.Portal.SSLEnabled"},"SSLEnforced":{"prefix":"SSLEnforced","body":"@Dnn.Portal.SSLEnforced"},"SSLURL":{"prefix":"SSLURL","body":"@Dnn.Portal.SSLURL"},"STDURL":{"prefix":"STDURL","body":"@Dnn.Portal.STDURL"},"SuperTabId":{"prefix":"SuperTabId","body":"@Dnn.Portal.SuperTabId"},"TimeZoneOffset":{"prefix":"TimeZoneOffset","body":"[Portal:TimeZoneOffset]","description":"Difference in Minutes between Portal Default Time and UTC"},"UserId":{"prefix":"UserId","body":"@Dnn.Portal.UserId"},"UserInfo":{"prefix":"UserInfo","body":"@Dnn.Portal.UserInfo"},"UserMode":{"prefix":"UserMode","body":"@Dnn.Portal.UserMode"},"UserQuota":{"prefix":"UserQuota","body":"@Dnn.Portal.UserQuota"},"UserRegistration":{"prefix":"UserRegistration","body":"@Dnn.Portal.UserRegistration"},"Users":{"prefix":"Users","body":"@Dnn.Portal.Users"},"UserTabId":{"prefix":"UserTabId","body":"@Dnn.Portal.UserTabId"},"DisplayName":{"prefix":"DisplayName","body":"[User:DisplayName]","description":"User’s Display Name"},"FirstName":{"prefix":"FirstName","body":"[User:FirstName]","description":"User’s First Name"},"FullName":{"prefix":"FullName","body":"[User:FullName]","description":"(deprecated)"},"IsInRole":{"prefix":"IsInRole","body":"@Dnn.User.IsInRole(string RoleName)"},"IsSuperUser":{"prefix":"IsSuperUser","body":"@Dnn.User.IsSuperUser"},"LastName":{"prefix":"LastName","body":"[User:LastName]","description":"User’s Last Name"},"Membership":{"prefix":"Membership","body":"@Dnn.User.Membership","description":"these are asp.net memberships, you probably don't need them"},"Roles":{"prefix":"Roles","body":"@Dnn.User.Roles","description":"these are DNN roles"},"UserID":{"prefix":"UserID","body":"@Dnn.User.UserID"},"Username":{"prefix":"Username","body":"@Dnn.User.Username"},"AnyValue":{"prefix":"AnyValue","body":"@Dnn.User.Profile.GetPropertyValue(\\${1:City}\\)","description":"any property of the user profile as configured in your portal"},"IsEditMode":{"prefix":"IsEditMode","body":"@if (DotNetNuke.Common.Globals.IsEditMode())\r\n{\r\n        <div> stuff here which only appears in edit mode </div>\r\n}"},"UserMayEditContent":{"prefix":"UserMayEditContent","body":"@if(Permissions.UserMayEditContent)\r\n{\r\n       <!-- stuff, like a custom edit toolbar - here an example -->\r\n       <ul class=\"sc-menu\" data-toolbar='{ \"action\": \"new\", \"contentType\": \"Gallery Image\", \"prefill\": { \"File\": \"File:@c.Image.FileId\" } }'></ul>\r\n}"},"User-is-in-role":{"prefix":"User-is-in-role","body":"@Dnn.User.IsInRole(\"${1:Administrators}\")","description":"Check if the current user is in a specific role"},"User-is-super-user-/-host":{"prefix":"User-is-super-user-/-host","body":"@Dnn.User.IsSuperUser","description":"Check if the current user is the super-user aka host"},"User-is-authenticated":{"prefix":"User-is-authenticated","body":"@if (Request.IsAuthenticated) {\r\n <!-- you're logged in -->\r\n}\r\nelse {\r\n  <!-- you're not logged in -->\r\n}","description":"Check if the user is logged in."},"using":{"prefix":"using","body":"@using ${1:System.Linq}"},"using-2sxc-namespace":{"prefix":"using-2sxc-namespace","body":"@using ToSic.SexyContent;\r\n","description":"The 2sxc namespace, in case you explicitly want to work with 2sxc objects"},"using-Linq":{"prefix":"using-Linq","body":"@using System.Linq;"},"comment,-server-side":{"prefix":"comment,-server-side","body":"@* \r\n\r\nserver side multi-line comment\r\n\r\n*@"},"functions-block-server-side":{"prefix":"functions-block-server-side","body":"@functions{\r\n\r\n}"},"Set-page-title":{"prefix":"Set-page-title","body":"// set page title\r\nvar page = HttpContext.Current.Handler as Page;\r\npage.Title = \"${1:This page title works}\";","description":"Set the page title of the dnn-page. Remember that this could happen multiple times, and the last one would always win."},"Set-header-metadata":{"prefix":"Set-header-metadata","body":"// set MetaDescription - page variable must be declared before\r\nvar metaDescription = (HtmlMeta)page.FindControl(\"${2:metaDescription}\");\r\nmetaDescription.Content = \"${1:This MetaDescription works}\";","description":"Set a meta-tag - in this case the Meta Description"},"Toolbar":{"prefix":"Toolbar","body":"[${1:Content}:Toolbar]","description":"Show an inline-toolbar. If you wat it hovering, make sure you have an HTML-element around it with the class sc-element"},"ToolbarFloat":{"prefix":"ToolbarFloat","body":"<div class=\"sc-element\">[${1:Content}:Toolbar]</div>","description":"Show an inline toolbar, floating. Note that this is just an example, the div with the class sc-element can be further away, it doesn't have to be the direct container. "},"Repeater":{"prefix":"Repeater","body":"<repeat repeat=\"${1:Employee} in Data:${2:Default}\">...[${1}:Title]...</repeat>","description":"Loop over a list of items in one of the input streams. The first value is the token-name inside the loop, the value after Data: is the stream name. Common use is Repeat=\"Item in Data:Default\""},"Count":{"prefix":"Count","body":"[${1:Employee}:Repeater:Count]","description":"Get the count"},"Index":{"prefix":"Index","body":"[${1:Employee}:Repeater:Index]","description":"Get the index of the current item, zero based. So the number start with 0, 1, 2, …"},"Index1":{"prefix":"Index1","body":"[${1:Employee}:Repeater:Index1]","description":"Get the index of the current item, one based. So the number start with 1, 2, 3, …"},"IsFirst":{"prefix":"IsFirst","body":"[${1:Employee}:Repeater:IsFirst]","description":"Find out if this is the first item"},"IsLast":{"prefix":"IsLast","body":"[${1:Employee}:Repeater:IsLast]","description":"Find out if this is the last item"},"Alternator2":{"prefix":"Alternator2","body":"[${1:Employee}:Repeater:Alternator2]","description":"Use this to alternate between 0, 1 - often used to color table rows"},"Alternator3":{"prefix":"Alternator3","body":"[${1:Employee}:Repeater:Alternator3]","description":"Use this to alternate between 0, 1 and 2 - often used to have 3 items side-by side, followed by a new line"},"Alternator4":{"prefix":"Alternator4","body":"[${1:Employee}:Repeater:Alternator4]"},"Alternator5":{"prefix":"Alternator5","body":"[${1:Employee}:Repeater:Alternator5]"},"PhysicalPath":{"prefix":"PhysicalPath","body":"[App:PhysicalPath]","description":"physical path in c:\\"},"Name":{"prefix":"Name","body":"[App:Name]","description":"internal name"},"Folder":{"prefix":"Folder","body":"[App:Folder]","description":"often used to create paths to scripts or join some values. if you only need to reference a script,  please use App.Path"},"FriendlyName":{"prefix":"FriendlyName","body":"[Module:FriendlyName]","description":"Module Definition Name"},"HelpUrl":{"prefix":"HelpUrl","body":"[Module:HelpURL]","description":"Module Help URL"},"IconFile":{"prefix":"IconFile","body":"[Tab:IconFile]","description":"Page Relative Path to Icon File"},"UserName":{"prefix":"UserName","body":"[User:Username]","description":"User’s Login User Name"},"Profile":{"prefix":"Profile","body":"[Profile:${1:City}]","description":"Use any default or custom Profile Property as listed in Profile Property Definition section of Manage User Accounts. Use non-localized Property Name only."},"QueryString":{"prefix":"QueryString","body":"[QueryString:${1:ParameterName}]","description":"Value of Querystring Name"},"Now":{"prefix":"Now","body":"[DateTime:Now]","description":"Current Date and Time"},"Ticks-Now":{"prefix":"Ticks-Now","body":"[Ticks:Now]","description":"CPU Tick Count for Current Second"},"Ticks-Today":{"prefix":"Ticks-Today","body":"[Ticks:Today]","description":"CPU Tick Count since Midnight"},"Ticks-Per-Day":{"prefix":"Ticks-Per-Day","body":"[Ticks:TicksPerDay]","description":"CPU Ticks per Day (for calculations)"},"script":{"prefix":"script","body":"<script src=\"@App.Path/dist/${1:myscripts}.js\" type=\"text/javascript\" data-enableoptimizations=\"100\"></script>"},"css,-style-sheet":{"prefix":"css,-style-sheet","body":"<link rel=\"stylesheet\" href=\"@App.Path/dist/AppCatalog.css\" data-enableoptimizations=\"100\"/>"},"thumbnail-url":{"prefix":"thumbnail-url","body":"@${101:var}.${102:prop}?w=${1:200}&h=${2:200}&mode=${3:crop}","description":"Thumbnail URL with crop-mode"},"thumbnail-IMG-tag":{"prefix":"thumbnail-IMG-tag","body":"<img src=\"@${101:var}.${102:prop}?w=${1:200}&h=${2:200}&mode=${3:crop}\">","description":"Thumbnail IMG tag with crop-mode"},"simple-loop-for-assets":{"prefix":"simple-loop-for-assets","body":"@foreach(var ${3:pic} in AsAdam(${1:var}, \"${2:prop}\").Files){\r\n <span>@${3:pic}.Url, @${3:pic}.FileName </span>\r\n}","description":"Adam: simple example with looping ADAM assets"},"loop-with-metadata-assets":{"prefix":"loop-with-metadata-assets","body":"@foreach(var ${3:pic} in AsAdam(${1:var}, \"${2:prop}\").Files){\r\n <div style=\"clear: both\">\r\n  <img src=\"@${3:pic}.Url?w=200&h=200&mode=crop\" title=\"@${3:pic}.FileName\" style=\"float: right\">\r\n  <h3>@${3:pic}.Metadata.${10:Title}</h3>\r\n  Has Meta: @${3:pic}.HasMetadata \r\n  <div>Description: @Html.Raw(${3:pic}.Metadata.${11:Description})</div>\r\n </div>\r\n}","description":"Adam: Large example with looping ADAM assets"},"loop-with-type-filter":{"prefix":"loop-with-type-filter","body":"@foreach(var ${3:pic} in (AsAdam(${1:var}, \"${2:prop}\").Files as IEnumerable<ToSic.SexyContent.Adam.AdamFile>).Where(f => f.Type == \"${4:image}\")){\r\n <span>@${3:pic}.Url, @${3:pic}.FileName </span>\r\n}"},"raw-html":{"prefix":"raw-html","body":"@Html.Raw(${101:var}.${102:prop})","description":"Output the html as html, not as text"},"link-to-url-as-parameter":{"prefix":"link-to-url-as-parameter","body":"@Link.To(parameters: \"${10:id}=\" + ${1:var}.${2:prop})","description":"Link to the same page but use this value as a url parameter"},"yyyy-MM-dd":{"prefix":"yyyy-MM-dd","body":"@${1:var}.${2:prop}.ToString(\"yyyy-MM-dd\")","description":"format date with yyyy-MM-dd"},"content-block-with-inpage-editing":{"prefix":"content-block-with-inpage-editing","body":"<div class=\"sc-content-block-list\" @Edit.ContextAttributes(${101:var}, field: \"${102:prop}\")>\r\n    @foreach(var contentBlock in AsDynamic(${101:var}.${102:prop})){\r\n        @contentBlock.Render()\r\n    }\r\n</div>\r\n","description":"Content blocks with in-page editing"},"render-entity":{"prefix":"render-entity","body":"@${101:var}.render()","description":"Render a content-block entity (remember that you can't render the list, this only renders one item).\r\nNote that if you try to render any kind of entity, this will not throw an error, but just render an HTML comment as there is no definition for how to render other types of entities as of now."},"loop-through-items":{"prefix":"loop-through-items","body":"@foreach(var ${103:item} in AsDynamic(${101:var}.${102:prop})){\r\n    @${103:item}.EntityId\r\n}\r\n","description":"loop over a list of sub-items"},"edit-context":{"prefix":"edit-context","body":"@Edit.ContextAttributes(${101:var}, field: \"${102:prop}\")","description":"This should be used inside a <div> tag to provide additional information to the in-page editing ui"},"item-count":{"prefix":"item-count","body":"@${101:var}.${102:prop}.Count","description":"This will give you the count of items"},"get-item-number-0":{"prefix":"get-item-number-0","body":"@${101:var}.${102:prop}[0]","description":"Note that this only works, if there are items, otherwise you'll get an error"},"get-first-item":{"prefix":"get-first-item","body":"@${101:var}.${102:prop}[0]","description":"This also requires a @using Tosic.SexyContent; at the beginning of your cshtml"},"show-title-of-first-item-if-exists":{"prefix":"show-title-of-first-item-if-exists","body":"@(${1:var}.${2:prop}.Count > 0 ? ${1:var}.${2:prop}[0].EntityTitle : \"\")","description":"This is a shorthand for try-to-get-and-if-null-don’t-show"},"render-first-if-it-exists":{"prefix":"render-first-if-it-exists","body":"@(${1:var}.${2:prop}.Count > 0 ? ${1:var}.${2:prop}[0].Render() : \"\")","description":"This is a shorthand for try-to-render-first-and-if-null-don’t-show"}}